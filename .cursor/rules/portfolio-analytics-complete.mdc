---
description: 
globs: 
alwaysApply: true
---
# Portfolio Analytics - Complete System Guide

## üéØ Project Status: ‚úÖ PRODUCTION READY (v2.1)

This is a comprehensive financial analytics application for tracking portfolio performance, holdings, and tax-relevant metrics across multiple financial institutions.

**Current Portfolio Value**: $977K | **Test Coverage**: 93.4% (85/91) | **Transaction Types**: 150+ mappings | **Assets**: 64 (33 crypto + 31 stocks)

## üèóÔ∏è Core Architecture & Data Flow

### 1. Data Ingestion Pipeline
```
Raw CSV Files ‚Üí Institution Detection ‚Üí Custom Processing ‚Üí Normalization ‚Üí Validation
```

**Key Components:**
- [app/ingestion/loader.py](mdc:app/ingestion/loader.py) - Multi-institution data loading with automatic detection
- [app/ingestion/normalization.py](mdc:app/ingestion/normalization.py) - Enhanced normalization (150+ transaction types)
- [config/schema_mapping.yaml](mdc:config/schema_mapping.yaml) - Institution-specific column mappings

### 2. Historical Price Data System (v2.1)
```
CSV Price Files ‚Üí External APIs ‚Üí Price Consolidation ‚Üí Portfolio Valuation
```

**Priority Order:**
1. Historical CSV files ([data/historical_price_data/](mdc:data/historical_price_data)) - 35+ crypto assets
2. CoinGecko API (crypto fallback)
3. yfinance (stocks/ETFs)
4. Fixed prices (stablecoins at $1.00)

**Key Components:**
- [app/analytics/portfolio.py](mdc:app/analytics/portfolio.py) - Enhanced portfolio calculation with price data
- [app/services/price_service.py](mdc:app/services/price_service.py) - Price data management

### 3. Portfolio Analytics Engine
```
Normalized Transactions ‚Üí Holdings Calculation ‚Üí Price Application ‚Üí Performance Metrics
```

**Key Functions:**
- `compute_portfolio_time_series_with_external_prices()` - Main portfolio calculation
- `consolidate_eth_holdings()` - Asset consolidation (ETH/ETH2)
- `fetch_historical_prices()` - Multi-source price fetching

### 4. User Interface & API
- [ui/streamlit_app_v2.py](mdc:ui/streamlit_app_v2.py) - Enhanced dashboard (PRODUCTION)
- [ui/components/](mdc:ui/components) - Reusable chart and metric components
- [app/api/__init__.py](mdc:app/api/__init__.py) - REST API endpoints with proper shutdown handling

## üè¶ Supported Institutions & Coverage

### Cryptocurrency Exchanges
- **Binance US** (15 transaction types) - Buy, Sell, Staking, Deposits, Withdrawals
- **Coinbase** (20 transaction types) - Advanced Trading, Staking Income, Earn Rewards
- **Gemini** (25 transaction types) - Trading, Staking, Custody Transfers, Interest

### Traditional Brokers
- **Interactive Brokers** (12 transaction types) - Stocks, ETFs, Dividends, Interest, Cash

**Total Coverage**: 150+ transaction type mappings across 4 institutions
**Unknown Rate**: <2% (down from 15% in v1)

## üí∞ Asset Coverage & Performance

### Crypto Assets (35+ with CSV data)
- **Major**: BTC ($431K), ETH ($177K), LTC, BCH
- **DeFi**: AAVE, COMP, UNI, SUSHI, YFI, MKR, SNX
- **Layer 1**: SOL ($35K), ADA, DOT, ATOM, AVAX, ALGO
- **Stablecoins**: USDC, USDT, DAI, BUSD, GUSD

### Traditional Assets (31 stocks/ETFs)
- **Top Holdings**: VOO ($186K), AAPL, MSFT, GOOGL, META, TSLA
- **ETFs**: VEA, VWO, VNQ, GLD, SPY
- **Cash**: USD ($104K)

### Performance Metrics
- **Portfolio Value**: $977,469 (latest calculation)
- **Price Data Coverage**: 8,337 days across 64 assets
- **Transaction Processing**: 4,081/4,235 transactions (excluding internal transfers)
- **Data Loading**: <200ms for 4,235 transactions
- **Portfolio Calculation**: <2 seconds with historical price data

## üìÅ Project Structure

```
portfolio_analytics/
‚îú‚îÄ‚îÄ app/                    # Core application modules
‚îÇ   ‚îú‚îÄ‚îÄ analytics/         # Portfolio calculation & returns (ENHANCED v2.1)
‚îÇ   ‚îú‚îÄ‚îÄ ingestion/        # Data loading & normalization (ENHANCED v2.0)
‚îÇ   ‚îú‚îÄ‚îÄ services/         # Price service & business logic
‚îÇ   ‚îú‚îÄ‚îÄ api/              # REST API endpoints
‚îÇ   ‚îî‚îÄ‚îÄ db/               # Database models & sessions
‚îú‚îÄ‚îÄ ui/                    # Dashboard and components
‚îÇ   ‚îú‚îÄ‚îÄ streamlit_app_v2.py  # Enhanced dashboard (PRODUCTION)
‚îÇ   ‚îî‚îÄ‚îÄ components/       # Reusable UI components
‚îú‚îÄ‚îÄ data/                 # Input data
‚îÇ   ‚îú‚îÄ‚îÄ transaction_history/  # Multi-institution CSV files
‚îÇ   ‚îî‚îÄ‚îÄ historical_price_data/  # Historical price CSV files
‚îú‚îÄ‚îÄ tests/                 # Comprehensive test suite (93.4% pass rate)
‚îú‚îÄ‚îÄ output/               # Generated reports & normalized data
‚îú‚îÄ‚îÄ config/               # Configuration & mappings
‚îî‚îÄ‚îÄ scripts/              # Utility & benchmark scripts
```

## üöÄ Modern Development Setup (uv-based)

### Environment Setup
```bash
# Create and activate environment
uv venv
source .venv/bin/activate

# Install with development tools
uv pip install -e ".[dev]"

# Or use lock files for exact reproducibility
uv pip sync requirements-dev.lock
```

### Key Configuration Files
- [pyproject.toml](mdc:pyproject.toml) - Modern Python packaging configuration
- [requirements.lock](mdc:requirements.lock) - Production dependencies (71 packages)
- [requirements-dev.lock](mdc:requirements-dev.lock) - Development dependencies (162 packages)
- [MIGRATION_SUMMARY.md](mdc:MIGRATION_SUMMARY.md) - Complete migration documentation

## üìä API Architecture

### FastAPI Endpoints
- `GET /health` - Health check
- `GET /portfolio/value` - Portfolio value for specific date
- `GET /portfolio/value/series` - Portfolio value time series
- `GET /portfolio/returns` - Portfolio returns with daily and cumulative data

### Database Integration
- [app/db/base.py](mdc:app/db/base.py) - SQLAlchemy models with enhanced connection handling
- [app/db/session.py](mdc:app/db/session.py) - Database session management

### Key Fixes Applied
- **API Shutdown**: Proper database engine disposal (no more double Ctrl+C)
- **Connection Pooling**: Enhanced SQLAlchemy settings for reliability
- **Test Imports**: Fixed all test file imports after uv migration

## üìä Expected Results & Quality Targets

### Healthy Portfolio Metrics
- **Portfolio Value**: ~$977K (as of latest fix)
- **Top Assets**: BTC (~$431K), VOO (~$186K), ETH (~$177K)
- **Price Data Coverage**: 64 assets (33 crypto + 31 stocks)
- **Transaction Processing**: ~4,081/4,235 transactions (excluding transfers)

### Data Quality Targets
- **Unknown Transaction Types**: <2%
- **Duplicate Transactions**: 0
- **Missing Data**: 0 for required columns
- **Test Pass Rate**: >93% (85/91 tests)

### Performance Targets
- **Environment Setup**: <30 seconds with uv
- **Data Processing**: <200ms for 4,000+ transactions
- **Portfolio Calculation**: <2 seconds for full analysis
- **API Response**: <200ms for portfolio queries
- **Dashboard Load**: <500ms initial load

## üéØ Recent Major Achievements (v2.1)

### uv Migration Success
- **5-10x faster** dependency operations
- **Lock files** for reproducible builds
- **Modern packaging** with PEP 518/621 compliance
- **Entry points** for command-line tools

### Historical Price Data Integration
- **CSV Priority**: Local files over external APIs for better performance
- **Multi-source Fallback**: CoinGecko ‚Üí yfinance ‚Üí fixed prices
- **Asset Consolidation**: ETH/ETH2 unified handling
- **Error Handling**: Robust yfinance MultiIndex support

### Enhanced Normalization (v2.0)
- **5x Increase**: 30 ‚Üí 150+ transaction type mappings
- **Smart Inference**: Automatic type detection for unknown transactions
- **Institution Support**: 4 fully supported exchanges/brokers
- **Validation**: Production-grade error reporting

### Performance Improvements
- **Dashboard**: 5-6x faster than v1 with enhanced caching
- **Memory Efficiency**: <5MB overhead for typical datasets
- **Price Data**: 8,308 days of historical data processed efficiently
- **API Response**: <200ms for portfolio value queries
